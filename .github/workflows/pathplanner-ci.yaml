name: PathPlanner

on:
  push:
    branches: [main]

  pull_request:

  workflow_dispatch:

env:
  FLUTTER_VERSION: 3.3.10

jobs:
  formatting-analysis:
    name: "[GUI] Check Formatting & Analysis"
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
          
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-path: ${{ runner.tool_cache }}/flutter/linux
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Analyze
        run: flutter analyze
      
      - name: Check formatting
        run: flutter format -o none --set-exit-if-changed lib/* test/*
  
  test:
    name: "[GUI] Run Tests"
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-path: ${{ runner.tool_cache }}/flutter/linux

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test
  
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            build-option: "windows"
            artifact-path: "build/windows/runner/Release"
            artifact-name: PathPlanner-Windows
          - os: macos-12
            build-option: "macos"
            artifact-path: "build/macos/Build/Products/Release/PathPlanner-macOS.zip"
            artifact-name: PathPlanner-macOS
          - os: ubuntu-22.04
            build-option: "linux"
            artifact-path: "build/linux/x64/release/bundle"
            artifact-name: PathPlanner-Linux
    name: "[GUI] Build - ${{ matrix.artifact-name }}"
    needs: [formatting-analysis, test]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Install flutter deps
        if: ${{ matrix.build-option == 'linux' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-path: ${{ runner.tool_cache }}/flutter/${{ matrix.build-option }}
      
      - name: Get dependencies
        run: flutter pub get
      
      - name: Build app
        run: flutter build ${{ matrix.build-option }}
      
      - name: Copy redist
        if: ${{ matrix.build-option == 'windows' }}
        run: |
          cp windows/redist/msvcp140.dll build/windows/runner/Release
          cp windows/redist/vcruntime140.dll build/windows/runner/Release
          cp windows/redist/vcruntime140_1.dll build/windows/runner/Release
      
      - name: Zip release
        if: ${{ matrix.build-option == 'macos' }}
        run: |
          cd build/macos/Build/Products/Release
          zip -r PathPlanner-macOS.zip PathPlanner.app --symlinks
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}
      
      - name: Create MSIX
        if: ${{ matrix.build-option == 'windows' }}
        run: flutter pub run msix:create --store
      
      - name: Upload MSIX artifact
        if: ${{ matrix.build-option == 'windows' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}-MSIX
          path: ${{ matrix.artifact-path }}/pathplanner.msix
